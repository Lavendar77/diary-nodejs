name: Deploy Serverless Application

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20' # specify your Node.js version

      - name: Install dependencies
        run: npm install

      # - name: Run tests
      #   run: npm test # replace with your test command

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20' # specify your Node.js version

      - name: Install Serverless Framework
        run: npm install -g serverless@^3.0

      - name: Create .env file
        run: |
          echo "APP_NAME=${{ vars.APP_NAME }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASS=${{ secrets.DB_PASS }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "BCRYPT_ROUNDS=${{ vars.BCRYPT_ROUNDS }}" >> .env
          echo "JWT_KEY=${{ secrets.JWT_KEY }}" >> .env
          echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> .env
          echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> .env
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
          echo "AWS_REGION=${{ vars.AWS_REGION }}" >> .env

      - name: Deploy to AWS
        run: serverless deploy -s production -r ${{ vars.AWS_REGION }} --param="role=${{ secrets.AWS_ROLE_ID }}"

      - name: Run database migrations
        run: |
          npm run migrate

      - name: Notify deployment success
        run: echo "Deployment successful!"
